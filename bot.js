const TelegramBot = require('node-telegram-bot-api');
const { fetchGifts } = require('./giftFilter');
require('dotenv').config();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
const sentGifts = new Set();
const userSettings = new Map();
const monitoringIntervals = new Map();

// –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const DEFAULT_MAX_PRICE = 4;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ
async function sendGiftAlert(chatId, gift) {
    const message = `üéÅ –ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫!\n\n` +
        `üì¶ –ù–∞–∑–≤–∞–Ω–∏–µ: ${gift.name}\n` +
        `üè∑ –ú–æ–¥–µ–ª—å: ${gift.model}\n` +
        `üî¢ –ù–æ–º–µ—Ä: ${gift.gift_num}\n` +
        `üé® –§–æ–Ω: ${gift.backdrop}\n` +
        `üíé –¶–µ–Ω–∞: ${gift.price} TON`;

    const options = {
        parse_mode: 'HTML',
        reply_markup: {
            inline_keyboard: [
                [{
                    text: 'üéÅ –ö—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫',
                    url: `https://t.me/tonnel_network_bot/gift?startapp=${gift.gift_id}`
                }]
            ]
        }
    };

    try {
        await bot.sendMessage(chatId, message, options);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    console.log(`üë§ –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.from.username || msg.from.id} –≤ —á–∞—Ç–µ ${chatId}`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    if (!userSettings.has(chatId)) {
        console.log(`‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
        userSettings.set(chatId, {
            maxPrice: DEFAULT_MAX_PRICE
        });
    }

    const settings = userSettings.get(chatId);
    await bot.sendMessage(
        chatId, 
        `ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!\n\n` +
        `üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n` +
        `üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${settings.maxPrice} TON\n\n` +
        `–ö–æ–º–∞–Ω–¥—ã:\n` +
        `/price <—Ü–µ–Ω–∞> - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É\n` +
        `/stop - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥`
    );
    
    startMonitoring(chatId);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stop
bot.onText(/\/stop/, async (msg) => {
    const chatId = msg.chat.id;
    console.log(`üõë –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /stop –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.from.username || msg.from.id} –≤ —á–∞—Ç–µ ${chatId}`);
    
    if (monitoringIntervals.has(chatId)) {
        clearInterval(monitoringIntervals.get(chatId));
        monitoringIntervals.delete(chatId);
        console.log(`‚èπ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
        await bot.sendMessage(chatId, 'üõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } else {
        console.log(`‚ÑπÔ∏è –ü–æ–ø—ã—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —á–∞—Ç–µ ${chatId}`);
        await bot.sendMessage(chatId, '‚ùå –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /price
bot.onText(/\/price(?:\s+(\d*\.?\d*))?/, async (msg, match) => {
    const chatId = msg.chat.id;
    const newPrice = match[1];

    if (!newPrice) {
        const currentPrice = userSettings.get(chatId)?.maxPrice || DEFAULT_MAX_PRICE;
        await bot.sendMessage(
            chatId, 
            `üìä –¢–µ–∫—É—â–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${currentPrice} TON\n\n` +
            `–ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n` +
            `/price <–Ω–æ–≤–∞—è —Ü–µ–Ω–∞>`
        );
        return;
    }

    const price = parseFloat(newPrice);
    if (isNaN(price) || price <= 0) {
        await bot.sendMessage(chatId, '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É –±–æ–ª—å—à–µ 0');
        return;
    }

    userSettings.set(chatId, {
        ...userSettings.get(chatId),
        maxPrice: price
    });

    await bot.sendMessage(
        chatId, 
        `‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${price} TON\n\n` +
        `–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–¥–∞—Ä–∫–∞—Ö –¥–µ—à–µ–≤–ª–µ ${price} TON`
    );

    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    if (monitoringIntervals.has(chatId)) {
        clearInterval(monitoringIntervals.get(chatId));
        startMonitoring(chatId);
    }
});

// –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–æ–¥–∞—Ä–∫–æ–≤
async function startMonitoring(chatId) {
    console.log(`üü¢ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (monitoringIntervals.has(chatId)) {
        console.log(`üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
        clearInterval(monitoringIntervals.get(chatId));
    }

    const interval = setInterval(async () => {
        try {
            console.log(`\n‚è∞ [${new Date().toLocaleTimeString()}] –ù–∞—á–∞–ª–æ —Ü–∏–∫–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
            
            const gifts = await fetchGifts();
            const settings = userSettings.get(chatId);
            const maxPrice = settings?.maxPrice || DEFAULT_MAX_PRICE;
            
            console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
            - –í—Å–µ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: ${gifts.length}
            - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–∏—Å–∫–∞: ${maxPrice} TON
            - –†–∞–∑–º–µ—Ä –∫—ç—à–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö ID: ${sentGifts.size}`);
            
            const filteredGifts = gifts.filter(gift => gift.price < maxPrice);
            console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ ${filteredGifts.length} –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–µ—à–µ–≤–ª–µ ${maxPrice} TON`);
            
            let newGiftsCount = 0;
            for (const gift of filteredGifts) {
                if (!sentGifts.has(gift.gift_id)) {
                    console.log(`‚ú® –ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫:
                    - ID: ${gift.gift_id}
                    - –ú–æ–¥–µ–ª—å: ${gift.model}
                    - –¶–µ–Ω–∞: ${gift.price} TON`);
                    
                    await sendGiftAlert(chatId, gift);
                    sentGifts.add(gift.gift_id);
                    newGiftsCount++;
                }
            }
            
            console.log(`üì´ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: ${newGiftsCount}`);

            // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ gift_id –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
            if (sentGifts.size > 1000) {
                console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö ID');
                sentGifts.clear();
            }
            
            console.log(`‚úÖ –¶–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω\n`);
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:", error);
        }
    }, 20000); // –ò–Ω—Ç–µ—Ä–≤–∞–ª 20 —Å–µ–∫—É–Ω–¥

    monitoringIntervals.set(chatId, interval);
    console.log(`üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
    console.error(error);
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!'); 